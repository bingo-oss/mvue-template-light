@mixin inline-block($align: auto) {
    display: inline-block;
    vertical-align: $align;
}

@mixin flex-parent {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-flex-flow: row wrap;
    justify-content: space-around;
}

@mixin flex-child {
    -webkit-box-flex: 1;
    box-flex: 1;
    flex: 1;
}

@mixin ellipsis($width: 100%) {
    width: $width;
    overflow: hidden;
    white-space: nowrap;
    word-break: keep-all;
    text-overflow: ellipsis;
}

@mixin translate($left: 0,$top: 0) {
    -webkit-transform:translate($left,$top);  
    transform:translate($left,$top);          
}

@mixin transform($val) {
    /* $val的值可以为：translate(left, right) scale(1) rotate(90deg)的任意组合 */
    -webkit-transform:$val;  
    transform:$val;          

}

@mixin translateX($left: 0) {
    -webkit-transform:translateX($left);
    transform:translateX($left);
}

@mixin translateY($top: 0) {
    -webkit-transform:translateY($top);
    transform:translateY($top);
}

@mixin middle-center($position: absolute) {
    position: $position;
    left: 50%;
    top: 50%;
    @include translate(-50%, -50%);
}

@mixin middle-center-x($position: absolute) {
    position: $position;
    left: 50%;
    @include translateX(-50%);
}

@mixin middle-center-y($position: absolute) {
    position: $position;
    top: 50%;
    @include translateY(-50%);
}

@mixin box-sizing($type: border-box){
    -moz-box-sizing: $type;  
    -webkit-box-sizing: $type; 
    -o-box-sizing: $type; 
    -ms-box-sizing: $type; 
    box-sizing: $type; 
}

@mixin multi-ellipsis($line-number: 2) {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line-number;
}

@mixin border-radius($radius: 2){
    border-radius: $radius;
}

//-----------------------------------------------------  
// mixin scss
// 包括常用的mixin, %, @function 及辅助的btn和背景图片icon
// mixin，通过@include调用，样式通过拷贝的方式使用，尤其适用于传递参数
// %，通过@extend调用，样式通过组合申明的方式使用，适用于不传参数的代码片段  

// mixin & %
// 既定义了mixin也定义了%，根据需求使用@include或@extend调用
//-----------------------------------------------------

// clearfix
@mixin clearfix($extend: true) {
    @if $extend {
        @extend %clearfix;
    }
    @else {
        &:before,
        &:after {
            content: "";
            display: table;
        }
        &:after {
            clear: both;
        }
    }
}

%clearfix {
    @include clearfix(false);
}

// Hide only visually, but have it available for screenreaders
// 只隐藏于视觉，屏幕浏览器可以阅读
@mixin hidden-clip($extend: true) {
    @if $extend {
        @extend %hidden-clip;
    }
    @else {
        position: absolute;
        clip: rect(1px, 1px, 1px, 1px);
    }
}

%hidden-clip {
    @include hidden-clip(false);
}

// word-break
// 用于链接地址强制换行
@mixin word-break($extend: true) {
    @if $extend {
        @extend %word-break;
    }
    @else {
        white-space: normal;
        word-wrap: break-word;
        word-break: break-all;
    }
}

%word-break {
    @include word-break(false);
}

// disabled
// 禁用样式，加!important
@mixin disabled() {
    background-color: #ddd !important;
    color: #666 !important;
    cursor: default !important;
    pointer-events: none !important;
}

%disabled {
    @include disabled;
}

// fixed top & bottom
@mixin fixed($pos: 0) {
    position: fixed;
    left: 0;
    right: 0;
    @if $pos == bottom {
        bottom: 0;
    }
    @else {
        top: $pos;
    }
}

%fixed-top {
    @include fixed;
}

%fixed-bottom {
    @include fixed($pos: bottom);
}

// justify
@mixin justify($extend: true) {
    @if $extend {
        @extend %justify;
    }
    @else {
        display: flex;
        justify-content: space-between;
    }
}

%justify {
    @include justify(false);
}

// mixin
// 只定义了mixin，所以只能通过@include来调用
//-----------------------------------------------------

// table 等分
@mixin equal-table($children: li) {
    display: table;
    table-layout: fixed;
    width: 100%;
    $childrenEle: li div p a span strong;
    @if index($childrenEle, $children) {
        #{$children} {
            display: table-cell;
        }
    }
    @else {
        .#{$children} {
            display: table-cell;
        }
    }
}

// flex 等分
@mixin equal-flex($children: li) {
    display: flex;
    $childrenEle: li div p a span strong;
    @if index($childrenEle, $children) {
        #{$children} {
            flex: 1;
        }
    }
    @else {
        .#{$children} {
            flex: 1;
        }
    }
}

// flex center
@mixin center-flex($direction: both) {
    display: flex;
    @if $direction == both {
        justify-content: center;
        align-items: center;
    }
    @else if $direction == x {
        justify-content: center;
    }
    @else if $direction == y {
        align-items: center;
    }
}

// translate center
@mixin center-translate($direction: both) {
    position: absolute;
    @if $direction == both {
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0);
        -webkit-transform: translate3d(-50%, -50%, 0);
    }
    @else if $direction == x {
        left: 50%;
        transform: translate3d(-50%, 0, 0);
        -webkit-transform: translate3d(-50%, 0, 0);
    }
    @else if $direction == y {
        top: 50%;
        transform: translate3d(0, -50%, 0);
        -webkit-transform: translate3d(0, -50%, 0);
    }
}

// triangle 三角箭头
%triangle-basic {
    content: "";
    height: 0;
    width: 0;
    overflow: hidden;
}

@mixin triangle($direction: top, $borderWidth: 6px, $borderColor: #dedede) {
    @extend %triangle-basic;
    @if $direction == top {
        border-bottom: $borderWidth solid $borderColor;
        border-left: $borderWidth dashed transparent;
        border-right: $borderWidth dashed transparent;
    }
    @else if $direction == right {
        border-left: $borderWidth solid $borderColor;
        border-top: $borderWidth dashed transparent;
        border-bottom: $borderWidth dashed transparent;
    }
    @else if $direction == bottom {
        border-top: $borderWidth solid $borderColor;
        border-left: $borderWidth dashed transparent;
        border-right: $borderWidth dashed transparent;
    }
    @else if $direction == left {
        border-right: $borderWidth solid $borderColor;
        border-top: $borderWidth dashed transparent;
        border-bottom: $borderWidth dashed transparent;
    }
}

// arrow 方向箭头
@mixin arrow($size: 10px, $direction: right, $borderWidth: 2px, $borderColor: #dedede) {
    display: inline-block;
    vertical-align: middle;
    width: $size;
    height: $size;
    @if $direction == top {
        border-top: $borderWidth solid $borderColor;
        border-right: $borderWidth solid $borderColor;
        transform: rotate(-45deg);
    }
    @else if $direction == right {
        border-top: $borderWidth solid $borderColor;
        border-right: $borderWidth solid $borderColor;
        transform: rotate(45deg);
    }
    @else if $direction == bottom {
        border-left: $borderWidth solid $borderColor;
        border-bottom: $borderWidth solid $borderColor;
        transform: rotate(-45deg);
    }
    @if $direction == left {
        border-left: $borderWidth solid $borderColor;
        border-bottom: $borderWidth solid $borderColor;
        transform: rotate(45deg);
    }
}

// page switch
%page-out {
    transition: transform 0.4s cubic-bezier(0.42, 0, 0.58, 1) 0.1s;
}

%page-in {
    transition: transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
}

// btn
//----------------------------------------------------
// btn-basic
// 按钮基本样式，联合申明
%btn-basic {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    text-align: center;
    border: 0 none;
    box-sizing: border-box;
    user-select: none;
}